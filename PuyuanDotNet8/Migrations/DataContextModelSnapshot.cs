// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PuyuanDotNet8.Data;

#nullable disable

namespace PuyuanDotNet8.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PuyuanDotNet8.Data.BloodPressure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Diastolic")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int?>("Pulse")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Recorded_At")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Systolic")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("BloodPressure");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.BloodSugar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Recorded_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sugar")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("Timeperiod")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("BloodSugar");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Default", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Bmi_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Bmi_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Body_Fat_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Body_Fat_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Diastolic_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Diastolic_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Pulse_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Pulse_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Sugar_After_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_After_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Before_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Before_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Delta_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Delta_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Evening_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Evening_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Morning_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Sugar_Morning_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<int>("Systolic_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Systolic_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Updated_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<double>("Weight_Max")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.Property<double>("Weight_Min")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("float")
                        .HasDefaultValue(1.0);

                    b.HasKey("Id");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("Default");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.DiaryDiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageCount")
                        .HasColumnType("int");

                    b.Property<double?>("Lat")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.Property<double?>("Lng")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.Property<int?>("Meal")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<DateTime>("Recorded_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tag")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("DiaryDiet");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.DrugInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Drug_Type")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Recorded_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("DrugInformation");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Friend_Type")
                        .HasColumnType("int");

                    b.Property<bool?>("Read")
                        .HasColumnType("bit");

                    b.Property<int>("Relation_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.HbA1c", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("A1c")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("Created_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("Recorded_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime?>("Updated_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("HbA1c");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.MedicalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anti_Hypertensives")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Diabetes_Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("Insulin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Oad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Updated_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("MedicalInformation");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Member_Id")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Reply_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("After_Meal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("After_Recording")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<bool>("No_Recording_For_A_Day")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Over_Max_Or_Under_Min")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Unit_Of_Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Unit_Of_Sugar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Unit_Of_Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Updated_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Data_Type")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("Fid")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("Relation_Type")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uid");

                    b.ToTable("Share");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.UserCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Member_Id")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Reply_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("UserCare");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fb_Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.UserSet", b =>
                {
                    b.Property<string>("Uuid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<int>("Badge")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fcm_Id")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<bool>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Group")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<int>("Height")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasPrecision(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Invite_Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Must_Change_Password")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("");

                    b.Property<bool>("Privacy_Policy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("VIP");

                    b.Property<int>("UnreadRecordsOne")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnreadRecordsThree")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UnreadRecordsTwo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Updated_At")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<bool>("Verified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasPrecision(5)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("login_times")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Uuid");

                    b.ToTable("UserSet");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Verification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VerifictionCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("Verification");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data._Weight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Bmi")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("Body_Fat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("Recorded_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    b.ToTable("Weight");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.BloodPressure", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("BloodPressures")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.BloodSugar", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("BloodSugars")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Default", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithOne("Default")
                        .HasForeignKey("PuyuanDotNet8.Data.Default", "Uuid")
                        .HasPrincipalKey("PuyuanDotNet8.Data.UserProfile", "Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.DiaryDiet", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("DiaryDiets")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.DrugInformation", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("DrugInformation")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Friend", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("Friends")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.HbA1c", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("HbA1Cs")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.MedicalInformation", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithOne("MedicalInformation")
                        .HasForeignKey("PuyuanDotNet8.Data.MedicalInformation", "Uuid")
                        .HasPrincipalKey("PuyuanDotNet8.Data.UserProfile", "Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Notification", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("Notifications")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Setting", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithOne("Setting")
                        .HasForeignKey("PuyuanDotNet8.Data.Setting", "Uuid")
                        .HasPrincipalKey("PuyuanDotNet8.Data.UserProfile", "Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Share", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("Shares")
                        .HasForeignKey("Uid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.UserCare", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("UserCares")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.UserSet", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithOne("UserSet")
                        .HasForeignKey("PuyuanDotNet8.Data.UserSet", "Uuid")
                        .HasPrincipalKey("PuyuanDotNet8.Data.UserProfile", "Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.Verification", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithOne("Verification")
                        .HasForeignKey("PuyuanDotNet8.Data.Verification", "Uuid")
                        .HasPrincipalKey("PuyuanDotNet8.Data.UserProfile", "Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data._Weight", b =>
                {
                    b.HasOne("PuyuanDotNet8.Data.UserProfile", "UserProfile")
                        .WithMany("_Weights")
                        .HasForeignKey("Uuid")
                        .HasPrincipalKey("Uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PuyuanDotNet8.Data.UserProfile", b =>
                {
                    b.Navigation("BloodPressures");

                    b.Navigation("BloodSugars");

                    b.Navigation("Default")
                        .IsRequired();

                    b.Navigation("DiaryDiets");

                    b.Navigation("DrugInformation");

                    b.Navigation("Friends");

                    b.Navigation("HbA1Cs");

                    b.Navigation("MedicalInformation")
                        .IsRequired();

                    b.Navigation("Notifications");

                    b.Navigation("Setting")
                        .IsRequired();

                    b.Navigation("Shares");

                    b.Navigation("UserCares");

                    b.Navigation("UserSet")
                        .IsRequired();

                    b.Navigation("Verification")
                        .IsRequired();

                    b.Navigation("_Weights");
                });
#pragma warning restore 612, 618
        }
    }
}
